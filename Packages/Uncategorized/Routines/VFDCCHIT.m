VFDCCHIT ;DSS/LM - CCHIT Utilities - 9/15/2006
 ;;2009.2;DSS,INC VXVISTA OPEN SOURCE;;01 Dec 2009
 ;Copyright 1995-2009,Document Storage Systems Inc. All Rights Reserved
 ;
 ;  DBIA#  Supported Reference
 ;  -----  -----------------------------------------------------
 ;  2056   $$GET1^DIQ and GETS^DIQ
 ;  2263   $$GET^XPAR
 ;  2320   OPEN^%ZISH and CLOSE^%ZISH
 ;  3065   STDNAME^XLFNAME
 ;  10013  ^DIK
 ;  10103  $$FMADD^XLFDT and $$NOW^XLFDT
 ;
 Q
SOL ;;Archive and purge the SIGN-ON LOG
 ; Scheduled option VFD ARCHIVE SIGN-ON LOG
 ; 
 N VFDCC,VFDHNDL,VFDKDT,VFDEDT,VFDPATH,VFDFILE,VFDLIM,VFDNM,VFDR,VFDT,VFDXU1
 N X,X1,X2
 S VFDKDT=$$GET^XPAR("ALL","VFD CCHIT DAYS ON-LINE") S:VFDKDT<1 VFDKDT=30
 S VFDEDT=$$FMADD^XLFDT(DT,-VFDKDT)
 S VFDPATH=$$GET^XPAR("ALL","VFD CCHIT SIGN-ON ARCHIVE PATH")
 S:VFDPATH="" VFDPATH=$$GET1^DIQ(8989.3,1,320) Q:'$L(VFDPATH)  ;Path required
 N VFDFCNT,VFDFNAM S VFDFCNT=0,VFDFNAM="SOL-"_$TR($$NOW^XLFDT,".","p")
 D:$$GET^XPAR("ALL","VFD CCHIT FILE NAME HAS RANGE")  ;Override file name
 .N VFDLDT S VFDLDT=$O(^XUSEC(0,VFDEDT),-1)
 .S:$O(^XUSEC(0,VFDLDT))=VFDEDT VFDLDT=VFDEDT
 .S VFDFNAM="SOL-"_$P($O(^XUSEC(0,0)),".")_"-"_$P(VFDEDT,".")
 .Q
 S VFDFCNT=VFDFCNT+1,VFDFILE=VFDFNAM_"-"_VFDFCNT_".txt"
 S VFDHNDL="VFD-CCHIT-"_$J
 S VFDLIM=$$GET^XPAR("ALL","VFD CCHIT FIELD SEPARATOR")
 S @("VFDLIM="_$S($L(VFDLIM):VFDLIM,1:"$C(9)"))
 S:'$L(VFDLIM) VFDLIM=$C(9) ;Override if null
 ; For Excel, limit maximum rows to 2**16 (rounded to 65000)
 N VFDHDR,VFDMAXR,VFDTRGT,VFDRCNT
 S VFDTRGT=$$GET^XPAR("ALL","VFD CCHIT TARGET APPLICATION")
 S VFDMAXR=$$GET^XPAR("ALL","VFD CCHIT MAX RECORDS PER FILE")
 S:VFDTRGT="E"&'VFDMAXR VFDMAXR=65000
 S VFDHDR=$$GET^XPAR("ALL","VFD CCHIT COLUMN HEADERS")
 ; 
 N POP D OPEN^%ZISH(VFDHNDL,VFDPATH,VFDFILE,"W") Q:POP
 ; Archive Log
 S (VFDT,VFDRCNT)=0 U IO D:VFDHDR SHDR(VFDLIM)
 F  S VFDT=$O(^XUSEC(0,VFDT)) Q:VFDT>VFDEDT!POP  D
 .K VFDCC D GETS^DIQ(3.081,VFDT,"**",,$NA(VFDCC)) Q:'($D(VFDCC)>1)
 .S VFDRCNT=VFDRCNT+1 I VFDMAXR&(VFDRCNT>VFDMAXR) D  Q:POP  ;New output file
 ..D CLOSE^%ZISH(VFDHNDL)
 ..S VFDFCNT=VFDFCNT+1,VFDFILE=VFDFNAM_"-"_VFDFCNT_".txt"
 ..D OPEN^%ZISH(VFDHNDL,VFDPATH,VFDFILE,"W") Q:POP
 ..S VFDRCNT=VFDRCNT-VFDMAXR
 ..U IO D:VFDHDR SHDR(VFDLIM) ;Successive output files
 ..Q
 .S VFDR=$NA(VFDCC(3.081,VFDT_","))
 .W $TR(@VFDR@(.001),"@",VFDLIM) ;Date and Time
 .S VFDNM=@VFDR@(.01) D STDNAME^XLFNAME(.VFDNM,"C")
 .F X="FAMILY","GIVEN","MIDDLE","SUFFIX" W VFDLIM,$G(VFDNM(X)) ;User name
 .F X=1,2 W VFDLIM,$G(@VFDR@(X)) ;Fields
 .W VFDLIM,$P($G(@VFDR@(3)),"@"),VFDLIM,$P($G(@VFDR@(3)),"@",2)
 .F X=4:1:7,9:1:16,60,97:1:99 W VFDLIM,$G(@VFDR@(X)) ;Fields
 .W ! ;End of record
 .Q
 D CLOSE^%ZISH(VFDHNDL)
 ; Verify that last output file exists (weak coherency check)
 D OPEN^%ZISH(VFDHNDL,VFDPATH,VFDFILE,"R") Q:POP
 D CLOSE^%ZISH(VFDHNDL)
 ; Purge Log (Adapted from ^XUSPURGE)
 Q:$O(^XUSEC(0,0))'>0!$G(NOPURGE)  ;
 N DA,DIK S DIK="^XUSEC(0,"
 S DA=0 F  S DA=$O(^XUSEC(0,DA)) Q:(DA'>0)!(DA>VFDEDT)  D
 . S VFDXU1=+$G(^XUSEC(0,DA,0))
 . D ^DIK
 . ;Make sure the CUR X-ref is cleared.
 . I VFDXU1 K ^XUSEC(0,"CUR",VFDXU1,DA)
 . Q
 Q
SHDR(D) ;;SIGN-ON LOG Header
 ; D=DELIMITER
 S D=$G(D,"^") N X
 F X="SIGN-ON DATE","SIGN-ON TIME","USER LAST","USER FIRST","USER MIDDLE","USER SUFFIX" W X,D
 F X="DEVICE","JOB","SIGN-OFF DATE","SIGN-OFF TIME","CPU (4)","DEVICE","UCI","TASK" W X,D
 F X="ZIO","NODE","IP ADDRESS","WORKSTATION","AUTO-SIGNON HANDLE","REMOTE STATION","REMOTE USER","FORCE CLOSE" W X,D
 F X="CPU (60)","ELAPSED SECONDS","LOCATION" W X,D
 W "ELAPSED MINUTES",!
 Q
SELECTED(VFDFILE,VFDENTRY) ;;Mark File/Entry as selected in VFD SELECTION LOG
 ; Called from Post-Selection action and etc.
 ; 
 ; VFDFILE=File number
 ; VFDENTRY=IEN selected
 ; DUZ, $JOB, etc from environment
 ; 
 I $G(VFDFILE)>0,$G(VFDENTRY)>0 N VFDA,VFDR,VFDIENR,VFDNM
 E  Q
 S VFDNM=$$GET1^DIQ(+VFDFILE,+VFDENTRY,.01) Q:'$L(VFDNM)  ;Only valid entries
 S VFDR=$NA(VFDA(21608.1,"+1,")),(VFDIENR(1),@VFDR@(.01))=$$NOW^XLFDT
 F  Q:'$D(^VFD(21608.1,VFDIENR(1)))  S VFDIENR(1)=VFDIENR(1)+.00000001
 S @VFDR@(.02)=+VFDFILE,@VFDR@(.03)=+VFDENTRY I $G(DUZ) S @VFDR@(.04)=DUZ
 S @VFDR@(.05)=$J I $G(XQY) S @VFDR@(.06)=+XQY
 S @VFDR@(.07)=$P I $L($G(XQVOL)) S @VFDR@(.08)=XQVOL
 I $L($G(XQUSER)) S @VFDR@(.09)=XQUSER
 S @VFDR@(1.01)=$E(VFDNM,1,45)
 D UPDATE^DIE(,$NA(VFDA),$NA(VFDIENR),"MSG")
 Q
VSL ;;Archive and purge the VFD SELECTION LOG
 ; Scheduled option VFD ARCHIVE VFD SELECTION LOG
 ; 
 N VFDCC,VFDHNDL,VFDKDT,VFDEDT,VFDPATH,VFDFILE,VFDLIM,VFDNM,VFDR,VFDT,VFDXU1
 N X,X1,X2
 S VFDKDT=$$GET^XPAR("ALL","VFD CCHIT DAYS ON-LINE") S:VFDKDT<1 VFDKDT=30
 S VFDEDT=$$FMADD^XLFDT(DT,-VFDKDT)
 S VFDPATH=$$GET^XPAR("ALL","VFD CCHIT SELECTION LOG PATH")
 S:VFDPATH="" VFDPATH=$$GET1^DIQ(8989.3,1,320) Q:'$L(VFDPATH)  ;Path required
 N VFDFCNT,VFDFNAM S VFDFCNT=0,VFDFNAM="VSL-"_$TR($$NOW^XLFDT,".","p")
 D:$$GET^XPAR("ALL","VFD CCHIT FILE NAME HAS RANGE")  ;Override file name
 .N VFDLDT S VFDLDT=$O(^VFD(21608.1,VFDEDT),-1)
 .S:$O(^VFD(21608.1,VFDLDT))=VFDEDT VFDLDT=VFDEDT
 .S VFDFNAM="SOL-"_$P($O(^VFD(21608.1,0)),".")_"-"_$P(VFDEDT,".")
 .Q
 S VFDFCNT=VFDFCNT+1,VFDFILE=VFDFNAM_"-"_VFDFCNT_".txt"
 S VFDHNDL="VFD-CCHIT-"_$J
 S VFDLIM=$$GET^XPAR("ALL","VFD CCHIT FIELD SEPARATOR")
 S @("VFDLIM="_$S($L(VFDLIM):VFDLIM,1:"$C(9)"))
 S:'$L(VFDLIM) VFDLIM=$C(9) ;Override if null
 ; For Excel, limit maximum rows to 2**16 (rounded to 65000)
 N VFDHDR,VFDMAXR,VFDTRGT,VFDRCNT
 S VFDTRGT=$$GET^XPAR("ALL","VFD CCHIT TARGET APPLICATION")
 S VFDMAXR=$$GET^XPAR("ALL","VFD CCHIT MAX RECORDS PER FILE")
 S:VFDTRGT="E"&'VFDMAXR VFDMAXR=65000
 S VFDHDR=$$GET^XPAR("ALL","VFD CCHIT COLUMN HEADERS")
 ; 
 N POP D OPEN^%ZISH(VFDHNDL,VFDPATH,VFDFILE,"W") Q:POP
 ; Archive Log
 S (VFDT,VFDRCNT)=0 U IO D:VFDHDR VHDR(VFDLIM)
 F  S VFDT=$O(^VFD(21608.1,VFDT)) Q:VFDT>VFDEDT!POP  D
 .K VFDCC D GETS^DIQ(21608.1,VFDT,"**",,$NA(VFDCC)) Q:'($D(VFDCC)>1)
 .S VFDRCNT=VFDRCNT+1 I VFDMAXR&(VFDRCNT>VFDMAXR) D  Q:POP  ;New output file
 ..D CLOSE^%ZISH(VFDHNDL)
 ..S VFDFCNT=VFDFCNT+1,VFDFILE=VFDFNAM_"-"_VFDFCNT_".txt"
 ..D OPEN^%ZISH(VFDHNDL,VFDPATH,VFDFILE,"W") Q:POP
 ..S VFDRCNT=VFDRCNT-VFDMAXR
 ..U IO D:VFDHDR VHDR(VFDLIM) ;Successive output files
 ..Q
 .S VFDR=$NA(VFDCC(21608.1,VFDT_","))
 .W $TR(@VFDR@(.01),"@",VFDLIM) ;Date and Time
 .F X=.02,.03 W VFDLIM,$G(@VFDR@(X))
 .S VFDNM=@VFDR@(.04) D STDNAME^XLFNAME(.VFDNM,"C")
 .F X="FAMILY","GIVEN","MIDDLE","SUFFIX" W VFDLIM,$G(VFDNM(X)) ;User name
 .F X=.05:.01:.09,1.01 W VFDLIM,$G(@VFDR@(X)) ;Fields
 .W ! ;End of record
 .Q
 D CLOSE^%ZISH(VFDHNDL)
 ; Verify that last output file exists (weak coherency check)
 D OPEN^%ZISH(VFDHNDL,VFDPATH,VFDFILE,"R") Q:POP
 D CLOSE^%ZISH(VFDHNDL)
 ; Purge Log (Adapted from ^XUSPURGE)
 Q:$O(^VFD(21608.1,0))'>0!$G(NOPURGE)  ;
 N DA,DIK S DIK="^VFD(21608.1,"
 S DA=0 F  S DA=$O(^VFD(21608.1,DA)) Q:(DA'>0)!(DA>VFDEDT)  D
 . D ^DIK
 . Q
 Q
VHDR(D) ;;VFD SELECTION LOG Header
 ; D=DELIMITER
 S D=$G(D,"^") N X
 F X="DATE","TIME","FILE","ENTRY IEN" W X,D
 F X="USER LAST","USER FIRST","USER MIDDLE","USER SUFFIX" W X,D
 F X="JOB","OPTION","DEVICE","XQVOL","XQUSER" W X,D
 W "NAME FIELD",!
 Q
ESL ;;Archive Entry Selection Log, File 21608.1 VFD SELECTION LOG
 Q
TEST ;;Experimental code
 I $T(DEBUG^SISIUTL)]"" D DEBUG^SISIUTL("TEST~VFDCCHIT")
 Q
